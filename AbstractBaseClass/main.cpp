//Абстрактный базовый класс - класс, не имеющий обьектов, поскольку эти обьекты
//	создать невозможно. Абстрактные классы описывают общие понятия
//	например животные, растения, транспорт, и так далее. Абстрактные классы не позволяют создавать обьекты
// поскольку мы не знаем какие именно жти обьекты. Но абстрактые классы очень удобны
// для классификации других обьектов и с их помощью очень удобно строить иерархии 
//	классов.
// Для того чтобы сделать класс абстрактным, в нем нужно обьявить хотя бы один чисто виртуальный метод
//Чисто виртуальным методом называют метод , не имеющий определения .
// virtual type name(parameters) = 0
// = 0 показывает что у метода нет определения (реализации) поскольку она неизвестна в абстрактном классе
// например , мы не знаем как именно перемещается транспорт пока мы не узнаем какой именно жто транспорт
// способ перемещения станет известно в конкретном классе

//Чисто виртуальные методы обязательно должны быть реализованы (определены) в дочернем классе
// в противном случае дочерний класс унаследует чистую виртуальность и тоже будет абстрактным
//и так далее, пока какой либо дочерний класс не реализует чисто виртуальный метод

#include <iostream>
using namespace std;

#define delim "\n------------------------\n"

class Animal
{
public:
	
	virtual void sound() = 0;
};
class Cat :public Animal
{
public:
	void sound()
	{
		cout << "Meow" << endl;
	}
};
class Dog :public Animal
{
public:
	void sound()
	{
		cout << "Woof" << endl;
	}
};
int main()
{
	setlocale(LC_ALL, "");
	/*Animal v;*/
	Cat cat;
	cat.sound();
	Dog hot;
	hot.sound();
	return 0;
}